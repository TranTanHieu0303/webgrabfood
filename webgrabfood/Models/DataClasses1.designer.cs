#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webgrabfood.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_ThiTracNghiem")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaiLam(BaiLam instance);
    partial void UpdateBaiLam(BaiLam instance);
    partial void DeleteBaiLam(BaiLam instance);
    partial void InsertThamGiaThi(ThamGiaThi instance);
    partial void UpdateThamGiaThi(ThamGiaThi instance);
    partial void DeleteThamGiaThi(ThamGiaThi instance);
    partial void InsertChucNang(ChucNang instance);
    partial void UpdateChucNang(ChucNang instance);
    partial void DeleteChucNang(ChucNang instance);
    partial void InsertChucNangTaiKhoan(ChucNangTaiKhoan instance);
    partial void UpdateChucNangTaiKhoan(ChucNangTaiKhoan instance);
    partial void DeleteChucNangTaiKhoan(ChucNangTaiKhoan instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertLichSuThi(LichSuThi instance);
    partial void UpdateLichSuThi(LichSuThi instance);
    partial void DeleteLichSuThi(LichSuThi instance);
    partial void InsertLichThi(LichThi instance);
    partial void UpdateLichThi(LichThi instance);
    partial void DeleteLichThi(LichThi instance);
    partial void InsertLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void UpdateLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void DeleteLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void InsertMonThi(MonThi instance);
    partial void UpdateMonThi(MonThi instance);
    partial void DeleteMonThi(MonThi instance);
    partial void InsertNoiDungDe(NoiDungDe instance);
    partial void UpdateNoiDungDe(NoiDungDe instance);
    partial void DeleteNoiDungDe(NoiDungDe instance);
    partial void InsertNganHangCauHoi(NganHangCauHoi instance);
    partial void UpdateNganHangCauHoi(NganHangCauHoi instance);
    partial void DeleteNganHangCauHoi(NganHangCauHoi instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaiLam> BaiLams
		{
			get
			{
				return this.GetTable<BaiLam>();
			}
		}
		
		public System.Data.Linq.Table<ThamGiaThi> ThamGiaThis
		{
			get
			{
				return this.GetTable<ThamGiaThi>();
			}
		}
		
		public System.Data.Linq.Table<ChucNang> ChucNangs
		{
			get
			{
				return this.GetTable<ChucNang>();
			}
		}
		
		public System.Data.Linq.Table<ChucNangTaiKhoan> ChucNangTaiKhoans
		{
			get
			{
				return this.GetTable<ChucNangTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<LichSuThi> LichSuThis
		{
			get
			{
				return this.GetTable<LichSuThi>();
			}
		}
		
		public System.Data.Linq.Table<LichThi> LichThis
		{
			get
			{
				return this.GetTable<LichThi>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiKhoan> LoaiTaiKhoans
		{
			get
			{
				return this.GetTable<LoaiTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<MonThi> MonThis
		{
			get
			{
				return this.GetTable<MonThi>();
			}
		}
		
		public System.Data.Linq.Table<NoiDungDe> NoiDungDes
		{
			get
			{
				return this.GetTable<NoiDungDe>();
			}
		}
		
		public System.Data.Linq.Table<NganHangCauHoi> NganHangCauHois
		{
			get
			{
				return this.GetTable<NganHangCauHoi>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiLam")]
	public partial class BaiLam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaDe;
		
		private string _MaCH;
		
		private System.Nullable<char> _CauChon;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<NganHangCauHoi> _NganHangCauHoi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaCHChanging(string value);
    partial void OnMaCHChanged();
    partial void OnCauChonChanging(System.Nullable<char> value);
    partial void OnCauChonChanged();
    #endregion
		
		public BaiLam()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._NganHangCauHoi = default(EntityRef<NganHangCauHoi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCH
		{
			get
			{
				return this._MaCH;
			}
			set
			{
				if ((this._MaCH != value))
				{
					if (this._NganHangCauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCHChanging(value);
					this.SendPropertyChanging();
					this._MaCH = value;
					this.SendPropertyChanged("MaCH");
					this.OnMaCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauChon", DbType="Char(1)")]
		public System.Nullable<char> CauChon
		{
			get
			{
				return this._CauChon;
			}
			set
			{
				if ((this._CauChon != value))
				{
					this.OnCauChonChanging(value);
					this.SendPropertyChanging();
					this._CauChon = value;
					this.SendPropertyChanged("CauChon");
					this.OnCauChonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_BaiLam", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.BaiLams.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.BaiLams.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganHangCauHoi_BaiLam", Storage="_NganHangCauHoi", ThisKey="MaCH", OtherKey="MaCH", IsForeignKey=true)]
		public NganHangCauHoi NganHangCauHoi
		{
			get
			{
				return this._NganHangCauHoi.Entity;
			}
			set
			{
				NganHangCauHoi previousValue = this._NganHangCauHoi.Entity;
				if (((previousValue != value) 
							|| (this._NganHangCauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NganHangCauHoi.Entity = null;
						previousValue.BaiLams.Remove(this);
					}
					this._NganHangCauHoi.Entity = value;
					if ((value != null))
					{
						value.BaiLams.Add(this);
						this._MaCH = value.MaCH;
					}
					else
					{
						this._MaCH = default(string);
					}
					this.SendPropertyChanged("NganHangCauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_BaiLam", Storage="_TaiKhoan", ThisKey="MaTK", OtherKey="MaUse", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.BaiLams.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.BaiLams.Add(this);
						this._MaTK = value.MaUse;
					}
					else
					{
						this._MaTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThamGiaThi")]
	public partial class ThamGiaThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLT;
		
		private string _MaTK;
		
		private EntityRef<LichThi> _LichThi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLTChanging(string value);
    partial void OnMaLTChanged();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    #endregion
		
		public ThamGiaThi()
		{
			this._LichThi = default(EntityRef<LichThi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLT", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLT
		{
			get
			{
				return this._MaLT;
			}
			set
			{
				if ((this._MaLT != value))
				{
					if (this._LichThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLTChanging(value);
					this.SendPropertyChanging();
					this._MaLT = value;
					this.SendPropertyChanged("MaLT");
					this.OnMaLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichThi_ThamGiaThi", Storage="_LichThi", ThisKey="MaLT", OtherKey="MaLT", IsForeignKey=true)]
		public LichThi LichThi
		{
			get
			{
				return this._LichThi.Entity;
			}
			set
			{
				LichThi previousValue = this._LichThi.Entity;
				if (((previousValue != value) 
							|| (this._LichThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichThi.Entity = null;
						previousValue.ThamGiaThis.Remove(this);
					}
					this._LichThi.Entity = value;
					if ((value != null))
					{
						value.ThamGiaThis.Add(this);
						this._MaLT = value.MaLT;
					}
					else
					{
						this._MaLT = default(string);
					}
					this.SendPropertyChanged("LichThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ThamGiaThi", Storage="_TaiKhoan", ThisKey="MaTK", OtherKey="MaUse", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ThamGiaThis.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ThamGiaThis.Add(this);
						this._MaTK = value.MaUse;
					}
					else
					{
						this._MaTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucNang")]
	public partial class ChucNang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCN;
		
		private string _TenCN;
		
		private EntitySet<ChucNangTaiKhoan> _ChucNangTaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCNChanging(string value);
    partial void OnMaCNChanged();
    partial void OnTenCNChanging(string value);
    partial void OnTenCNChanged();
    #endregion
		
		public ChucNang()
		{
			this._ChucNangTaiKhoans = new EntitySet<ChucNangTaiKhoan>(new Action<ChucNangTaiKhoan>(this.attach_ChucNangTaiKhoans), new Action<ChucNangTaiKhoan>(this.detach_ChucNangTaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCN", DbType="NVarChar(50)")]
		public string TenCN
		{
			get
			{
				return this._TenCN;
			}
			set
			{
				if ((this._TenCN != value))
				{
					this.OnTenCNChanging(value);
					this.SendPropertyChanging();
					this._TenCN = value;
					this.SendPropertyChanged("TenCN");
					this.OnTenCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucNang_ChucNangTaiKhoan", Storage="_ChucNangTaiKhoans", ThisKey="MaCN", OtherKey="MaCN")]
		public EntitySet<ChucNangTaiKhoan> ChucNangTaiKhoans
		{
			get
			{
				return this._ChucNangTaiKhoans;
			}
			set
			{
				this._ChucNangTaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChucNangTaiKhoans(ChucNangTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ChucNang = this;
		}
		
		private void detach_ChucNangTaiKhoans(ChucNangTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ChucNang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucNangTaiKhoan")]
	public partial class ChucNangTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaCN;
		
		private EntityRef<ChucNang> _ChucNang;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaCNChanging(string value);
    partial void OnMaCNChanged();
    #endregion
		
		public ChucNangTaiKhoan()
		{
			this._ChucNang = default(EntityRef<ChucNang>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					if (this._ChucNang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucNang_ChucNangTaiKhoan", Storage="_ChucNang", ThisKey="MaCN", OtherKey="MaCN", IsForeignKey=true)]
		public ChucNang ChucNang
		{
			get
			{
				return this._ChucNang.Entity;
			}
			set
			{
				ChucNang previousValue = this._ChucNang.Entity;
				if (((previousValue != value) 
							|| (this._ChucNang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucNang.Entity = null;
						previousValue.ChucNangTaiKhoans.Remove(this);
					}
					this._ChucNang.Entity = value;
					if ((value != null))
					{
						value.ChucNangTaiKhoans.Add(this);
						this._MaCN = value.MaCN;
					}
					else
					{
						this._MaCN = default(string);
					}
					this.SendPropertyChanged("ChucNang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChucNangTaiKhoan", Storage="_TaiKhoan", ThisKey="MaTK", OtherKey="MaUse", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.ChucNangTaiKhoans.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChucNangTaiKhoans.Add(this);
						this._MaTK = value.MaUse;
					}
					else
					{
						this._MaTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private string _MaMon;
		
		private System.Nullable<int> _ThoiGian;
		
		private string _TenDe;
		
		private System.Nullable<int> _SoCau;
		
		private EntitySet<BaiLam> _BaiLams;
		
		private EntitySet<LichSuThi> _LichSuThis;
		
		private EntitySet<LichThi> _LichThis;
		
		private EntitySet<NoiDungDe> _NoiDungDes;
		
		private EntityRef<MonThi> _MonThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnThoiGianChanging(System.Nullable<int> value);
    partial void OnThoiGianChanged();
    partial void OnTenDeChanging(string value);
    partial void OnTenDeChanged();
    partial void OnSoCauChanging(System.Nullable<int> value);
    partial void OnSoCauChanged();
    #endregion
		
		public DeThi()
		{
			this._BaiLams = new EntitySet<BaiLam>(new Action<BaiLam>(this.attach_BaiLams), new Action<BaiLam>(this.detach_BaiLams));
			this._LichSuThis = new EntitySet<LichSuThi>(new Action<LichSuThi>(this.attach_LichSuThis), new Action<LichSuThi>(this.detach_LichSuThis));
			this._LichThis = new EntitySet<LichThi>(new Action<LichThi>(this.attach_LichThis), new Action<LichThi>(this.detach_LichThis));
			this._NoiDungDes = new EntitySet<NoiDungDe>(new Action<NoiDungDe>(this.attach_NoiDungDes), new Action<NoiDungDe>(this.detach_NoiDungDes));
			this._MonThi = default(EntityRef<MonThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(5)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Int")]
		public System.Nullable<int> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDe", DbType="NVarChar(100)")]
		public string TenDe
		{
			get
			{
				return this._TenDe;
			}
			set
			{
				if ((this._TenDe != value))
				{
					this.OnTenDeChanging(value);
					this.SendPropertyChanging();
					this._TenDe = value;
					this.SendPropertyChanged("TenDe");
					this.OnTenDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCau", DbType="Int")]
		public System.Nullable<int> SoCau
		{
			get
			{
				return this._SoCau;
			}
			set
			{
				if ((this._SoCau != value))
				{
					this.OnSoCauChanging(value);
					this.SendPropertyChanging();
					this._SoCau = value;
					this.SendPropertyChanged("SoCau");
					this.OnSoCauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_BaiLam", Storage="_BaiLams", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<BaiLam> BaiLams
		{
			get
			{
				return this._BaiLams;
			}
			set
			{
				this._BaiLams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LichSuThi", Storage="_LichSuThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<LichSuThi> LichSuThis
		{
			get
			{
				return this._LichSuThis;
			}
			set
			{
				this._LichSuThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LichThi", Storage="_LichThis", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<LichThi> LichThis
		{
			get
			{
				return this._LichThis;
			}
			set
			{
				this._LichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_NoiDungDe", Storage="_NoiDungDes", ThisKey="MaDe", OtherKey="MaDe")]
		public EntitySet<NoiDungDe> NoiDungDes
		{
			get
			{
				return this._NoiDungDes;
			}
			set
			{
				this._NoiDungDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonThi_DeThi", Storage="_MonThi", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonThi MonThi
		{
			get
			{
				return this._MonThi.Entity;
			}
			set
			{
				MonThi previousValue = this._MonThi.Entity;
				if (((previousValue != value) 
							|| (this._MonThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonThi.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._MonThi.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
		
		private void attach_NoiDungDes(NoiDungDe entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_NoiDungDes(NoiDungDe entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuThi")]
	public partial class LichSuThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaLT;
		
		private System.Nullable<double> _Diem;
		
		private string _MaDe;
		
		private System.Nullable<System.DateTime> _NgayThi;
		
		private System.Nullable<int> _SoCauDung;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<LichThi> _LichThi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaLTChanging(string value);
    partial void OnMaLTChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnNgayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThiChanged();
    partial void OnSoCauDungChanging(System.Nullable<int> value);
    partial void OnSoCauDungChanged();
    #endregion
		
		public LichSuThi()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._LichThi = default(EntityRef<LichThi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLT", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLT
		{
			get
			{
				return this._MaLT;
			}
			set
			{
				if ((this._MaLT != value))
				{
					if (this._LichThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLTChanging(value);
					this.SendPropertyChanging();
					this._MaLT = value;
					this.SendPropertyChanged("MaLT");
					this.OnMaLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Char(5)")]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauDung", DbType="Int")]
		public System.Nullable<int> SoCauDung
		{
			get
			{
				return this._SoCauDung;
			}
			set
			{
				if ((this._SoCauDung != value))
				{
					this.OnSoCauDungChanging(value);
					this.SendPropertyChanging();
					this._SoCauDung = value;
					this.SendPropertyChanged("SoCauDung");
					this.OnSoCauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LichSuThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.LichSuThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.LichSuThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichThi_LichSuThi", Storage="_LichThi", ThisKey="MaLT", OtherKey="MaLT", IsForeignKey=true)]
		public LichThi LichThi
		{
			get
			{
				return this._LichThi.Entity;
			}
			set
			{
				LichThi previousValue = this._LichThi.Entity;
				if (((previousValue != value) 
							|| (this._LichThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichThi.Entity = null;
						previousValue.LichSuThis.Remove(this);
					}
					this._LichThi.Entity = value;
					if ((value != null))
					{
						value.LichSuThis.Add(this);
						this._MaLT = value.MaLT;
					}
					else
					{
						this._MaLT = default(string);
					}
					this.SendPropertyChanged("LichThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSuThi", Storage="_TaiKhoan", ThisKey="MaTK", OtherKey="MaUse", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.LichSuThis.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.LichSuThis.Add(this);
						this._MaTK = value.MaUse;
					}
					else
					{
						this._MaTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichThi")]
	public partial class LichThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLT;
		
		private string _MaGV;
		
		private string _MaDe;
		
		private System.Nullable<System.DateTime> _NgayThi;
		
		private string _TenKyThi;
		
		private EntitySet<ThamGiaThi> _ThamGiaThis;
		
		private EntitySet<LichSuThi> _LichSuThis;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLTChanging(string value);
    partial void OnMaLTChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnNgayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    #endregion
		
		public LichThi()
		{
			this._ThamGiaThis = new EntitySet<ThamGiaThi>(new Action<ThamGiaThi>(this.attach_ThamGiaThis), new Action<ThamGiaThi>(this.detach_ThamGiaThis));
			this._LichSuThis = new EntitySet<LichSuThi>(new Action<LichSuThi>(this.attach_LichSuThis), new Action<LichSuThi>(this.detach_LichSuThis));
			this._DeThi = default(EntityRef<DeThi>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLT", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLT
		{
			get
			{
				return this._MaLT;
			}
			set
			{
				if ((this._MaLT != value))
				{
					this.OnMaLTChanging(value);
					this.SendPropertyChanging();
					this._MaLT = value;
					this.SendPropertyChanged("MaLT");
					this.OnMaLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(5)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Char(5)")]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(50)")]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichThi_ThamGiaThi", Storage="_ThamGiaThis", ThisKey="MaLT", OtherKey="MaLT")]
		public EntitySet<ThamGiaThi> ThamGiaThis
		{
			get
			{
				return this._ThamGiaThis;
			}
			set
			{
				this._ThamGiaThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichThi_LichSuThi", Storage="_LichSuThis", ThisKey="MaLT", OtherKey="MaLT")]
		public EntitySet<LichSuThi> LichSuThis
		{
			get
			{
				return this._LichSuThis;
			}
			set
			{
				this._LichSuThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_LichThi", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.LichThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.LichThis.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichThi", Storage="_TaiKhoan", ThisKey="MaGV", OtherKey="MaUse", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.LichThis.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.LichThis.Add(this);
						this._MaGV = value.MaUse;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThamGiaThis(ThamGiaThi entity)
		{
			this.SendPropertyChanging();
			entity.LichThi = this;
		}
		
		private void detach_ThamGiaThis(ThamGiaThi entity)
		{
			this.SendPropertyChanging();
			entity.LichThi = null;
		}
		
		private void attach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.LichThi = this;
		}
		
		private void detach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.LichThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTaiKhoan")]
	public partial class LoaiTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Maloai;
		
		private string _Tenloai;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaloaiChanging(string value);
    partial void OnMaloaiChanged();
    partial void OnTenloaiChanging(string value);
    partial void OnTenloaiChanged();
    #endregion
		
		public LoaiTaiKhoan()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloai", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Maloai
		{
			get
			{
				return this._Maloai;
			}
			set
			{
				if ((this._Maloai != value))
				{
					this.OnMaloaiChanging(value);
					this.SendPropertyChanging();
					this._Maloai = value;
					this.SendPropertyChanged("Maloai");
					this.OnMaloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenloai", DbType="NVarChar(50)")]
		public string Tenloai
		{
			get
			{
				return this._Tenloai;
			}
			set
			{
				if ((this._Tenloai != value))
				{
					this.OnTenloaiChanging(value);
					this.SendPropertyChanging();
					this._Tenloai = value;
					this.SendPropertyChanged("Tenloai");
					this.OnTenloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_TaiKhoan", Storage="_TaiKhoans", ThisKey="Maloai", OtherKey="LoaiTK")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonThi")]
	public partial class MonThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private EntitySet<DeThi> _DeThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    #endregion
		
		public MonThi()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(100)")]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonThi_DeThi", Storage="_DeThis", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonThi = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.MonThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoiDungDe")]
	public partial class NoiDungDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private string _MaCH;
		
		private EntityRef<DeThi> _DeThi;
		
		private EntityRef<NganHangCauHoi> _NganHangCauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaCHChanging(string value);
    partial void OnMaCHChanged();
    #endregion
		
		public NoiDungDe()
		{
			this._DeThi = default(EntityRef<DeThi>);
			this._NganHangCauHoi = default(EntityRef<NganHangCauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCH
		{
			get
			{
				return this._MaCH;
			}
			set
			{
				if ((this._MaCH != value))
				{
					if (this._NganHangCauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCHChanging(value);
					this.SendPropertyChanging();
					this._MaCH = value;
					this.SendPropertyChanged("MaCH");
					this.OnMaCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_NoiDungDe", Storage="_DeThi", ThisKey="MaDe", OtherKey="MaDe", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.NoiDungDes.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.NoiDungDes.Add(this);
						this._MaDe = value.MaDe;
					}
					else
					{
						this._MaDe = default(string);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganHangCauHoi_NoiDungDe", Storage="_NganHangCauHoi", ThisKey="MaCH", OtherKey="MaCH", IsForeignKey=true)]
		public NganHangCauHoi NganHangCauHoi
		{
			get
			{
				return this._NganHangCauHoi.Entity;
			}
			set
			{
				NganHangCauHoi previousValue = this._NganHangCauHoi.Entity;
				if (((previousValue != value) 
							|| (this._NganHangCauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NganHangCauHoi.Entity = null;
						previousValue.NoiDungDes.Remove(this);
					}
					this._NganHangCauHoi.Entity = value;
					if ((value != null))
					{
						value.NoiDungDes.Add(this);
						this._MaCH = value.MaCH;
					}
					else
					{
						this._MaCH = default(string);
					}
					this.SendPropertyChanged("NganHangCauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NganHangCauHoi")]
	public partial class NganHangCauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCH;
		
		private string _MaMon;
		
		private string _NoiDung;
		
		private string _A;
		
		private string _B;
		
		private string _C;
		
		private string _D;
		
		private System.Nullable<char> _DapAn;
		
		private EntitySet<BaiLam> _BaiLams;
		
		private EntitySet<NoiDungDe> _NoiDungDes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCHChanging(string value);
    partial void OnMaCHChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnAChanging(string value);
    partial void OnAChanged();
    partial void OnBChanging(string value);
    partial void OnBChanged();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnDChanging(string value);
    partial void OnDChanged();
    partial void OnDapAnChanging(System.Nullable<char> value);
    partial void OnDapAnChanged();
    #endregion
		
		public NganHangCauHoi()
		{
			this._BaiLams = new EntitySet<BaiLam>(new Action<BaiLam>(this.attach_BaiLams), new Action<BaiLam>(this.detach_BaiLams));
			this._NoiDungDes = new EntitySet<NoiDungDe>(new Action<NoiDungDe>(this.attach_NoiDungDes), new Action<NoiDungDe>(this.detach_NoiDungDes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCH
		{
			get
			{
				return this._MaCH;
			}
			set
			{
				if ((this._MaCH != value))
				{
					this.OnMaCHChanging(value);
					this.SendPropertyChanging();
					this._MaCH = value;
					this.SendPropertyChanged("MaCH");
					this.OnMaCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Char(5)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(500)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="NVarChar(500)")]
		public string A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="NVarChar(500)")]
		public string B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(500)")]
		public string C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="NVarChar(500)")]
		public string D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="Char(1)")]
		public System.Nullable<char> DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganHangCauHoi_BaiLam", Storage="_BaiLams", ThisKey="MaCH", OtherKey="MaCH")]
		public EntitySet<BaiLam> BaiLams
		{
			get
			{
				return this._BaiLams;
			}
			set
			{
				this._BaiLams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganHangCauHoi_NoiDungDe", Storage="_NoiDungDes", ThisKey="MaCH", OtherKey="MaCH")]
		public EntitySet<NoiDungDe> NoiDungDes
		{
			get
			{
				return this._NoiDungDes;
			}
			set
			{
				this._NoiDungDes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.NganHangCauHoi = this;
		}
		
		private void detach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.NganHangCauHoi = null;
		}
		
		private void attach_NoiDungDes(NoiDungDe entity)
		{
			this.SendPropertyChanging();
			entity.NganHangCauHoi = this;
		}
		
		private void detach_NoiDungDes(NoiDungDe entity)
		{
			this.SendPropertyChanging();
			entity.NganHangCauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaUse;
		
		private string _Usename;
		
		private string _Pass;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _NoiSinh;
		
		private string _GioiTinh;
		
		private string _HinhAnh;
		
		private string _LoaiTK;
		
		private EntitySet<BaiLam> _BaiLams;
		
		private EntitySet<ThamGiaThi> _ThamGiaThis;
		
		private EntitySet<ChucNangTaiKhoan> _ChucNangTaiKhoans;
		
		private EntitySet<LichSuThi> _LichSuThis;
		
		private EntitySet<LichThi> _LichThis;
		
		private EntityRef<LoaiTaiKhoan> _LoaiTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaUseChanging(string value);
    partial void OnMaUseChanged();
    partial void OnUsenameChanging(string value);
    partial void OnUsenameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnNoiSinhChanging(string value);
    partial void OnNoiSinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnLoaiTKChanging(string value);
    partial void OnLoaiTKChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._BaiLams = new EntitySet<BaiLam>(new Action<BaiLam>(this.attach_BaiLams), new Action<BaiLam>(this.detach_BaiLams));
			this._ThamGiaThis = new EntitySet<ThamGiaThi>(new Action<ThamGiaThi>(this.attach_ThamGiaThis), new Action<ThamGiaThi>(this.detach_ThamGiaThis));
			this._ChucNangTaiKhoans = new EntitySet<ChucNangTaiKhoan>(new Action<ChucNangTaiKhoan>(this.attach_ChucNangTaiKhoans), new Action<ChucNangTaiKhoan>(this.detach_ChucNangTaiKhoans));
			this._LichSuThis = new EntitySet<LichSuThi>(new Action<LichSuThi>(this.attach_LichSuThis), new Action<LichSuThi>(this.detach_LichSuThis));
			this._LichThis = new EntitySet<LichThi>(new Action<LichThi>(this.attach_LichThis), new Action<LichThi>(this.detach_LichThis));
			this._LoaiTaiKhoan = default(EntityRef<LoaiTaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaUse", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaUse
		{
			get
			{
				return this._MaUse;
			}
			set
			{
				if ((this._MaUse != value))
				{
					this.OnMaUseChanging(value);
					this.SendPropertyChanging();
					this._MaUse = value;
					this.SendPropertyChanged("MaUse");
					this.OnMaUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usename", DbType="VarChar(50)")]
		public string Usename
		{
			get
			{
				return this._Usename;
			}
			set
			{
				if ((this._Usename != value))
				{
					this.OnUsenameChanging(value);
					this.SendPropertyChanging();
					this._Usename = value;
					this.SendPropertyChanged("Usename");
					this.OnUsenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(20)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiSinh", DbType="NVarChar(500)")]
		public string NoiSinh
		{
			get
			{
				return this._NoiSinh;
			}
			set
			{
				if ((this._NoiSinh != value))
				{
					this.OnNoiSinhChanging(value);
					this.SendPropertyChanging();
					this._NoiSinh = value;
					this.SendPropertyChanged("NoiSinh");
					this.OnNoiSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(500)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="Char(5)")]
		public string LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					if (this._LoaiTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_BaiLam", Storage="_BaiLams", ThisKey="MaUse", OtherKey="MaTK")]
		public EntitySet<BaiLam> BaiLams
		{
			get
			{
				return this._BaiLams;
			}
			set
			{
				this._BaiLams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ThamGiaThi", Storage="_ThamGiaThis", ThisKey="MaUse", OtherKey="MaTK")]
		public EntitySet<ThamGiaThi> ThamGiaThis
		{
			get
			{
				return this._ThamGiaThis;
			}
			set
			{
				this._ThamGiaThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_ChucNangTaiKhoan", Storage="_ChucNangTaiKhoans", ThisKey="MaUse", OtherKey="MaTK")]
		public EntitySet<ChucNangTaiKhoan> ChucNangTaiKhoans
		{
			get
			{
				return this._ChucNangTaiKhoans;
			}
			set
			{
				this._ChucNangTaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichSuThi", Storage="_LichSuThis", ThisKey="MaUse", OtherKey="MaTK")]
		public EntitySet<LichSuThi> LichSuThis
		{
			get
			{
				return this._LichSuThis;
			}
			set
			{
				this._LichSuThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_LichThi", Storage="_LichThis", ThisKey="MaUse", OtherKey="MaGV")]
		public EntitySet<LichThi> LichThis
		{
			get
			{
				return this._LichThis;
			}
			set
			{
				this._LichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_TaiKhoan", Storage="_LoaiTaiKhoan", ThisKey="LoaiTK", OtherKey="Maloai", IsForeignKey=true)]
		public LoaiTaiKhoan LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan.Entity;
			}
			set
			{
				LoaiTaiKhoan previousValue = this._LoaiTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiKhoan.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._LoaiTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._LoaiTK = value.Maloai;
					}
					else
					{
						this._LoaiTK = default(string);
					}
					this.SendPropertyChanged("LoaiTaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_BaiLams(BaiLam entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ThamGiaThis(ThamGiaThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ThamGiaThis(ThamGiaThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_ChucNangTaiKhoans(ChucNangTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_ChucNangTaiKhoans(ChucNangTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_LichSuThis(LichSuThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
}
#pragma warning restore 1591
